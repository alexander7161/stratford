#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ an\ area\ in\ Stratford.\r\n\ \r\n\ A\ room\ is\ connected\ to\ other\ rooms\ by\ exits\r\n\ and\ can\ be\ traversed\ by\ the\ player\r\n\ \r\n\ @author\ \ Alexander\ Davis\r\n\ @version\ 8.12.2017\r\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n
comment10.params=
comment10.target=java.lang.String\ getExitString()
comment10.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north,\ west.".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment11.params=
comment11.target=java.util.ArrayList\ getExits()
comment11.text=\r\n\ Return\ array\ with\ exits\ of\ room.\r\n\ @return\ arraylist\ with\ strings\ of\ exits.\r\n
comment12.params=
comment12.target=java.lang.String\ getObjectString()
comment12.text=\r\n\ Return\ string\ with\ objects\ in\ the\ room.\r\n\ "Objects\ nearby\:\ costume"\r\n\ @return\ details\ of\ objects\ in\ the\ room.\r\n
comment13.params=direction
comment13.target=Room\ getExit(java.lang.String)
comment13.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment14.params=objString
comment14.target=Object\ getObject(java.lang.String)
comment14.text=\r\n\ Returns\ an\ object\ if\ an\ object\ in\ the\ room\ matches\ a\ given\ string.\r\n\ @param\ string\ of\ an\ objects\ name.\r\n\ @return\ Object\ in\ the\ room\ that\ matches\ string.\r\n\ \r\n
comment15.params=obj
comment15.target=void\ removeObject(Object)
comment15.text=\r\n\ Removes\ Object\ from\ room.\r\n\ @param\ Object\ to\ remove.\r\n\ \r\n
comment2.params=
comment2.target=java.util.ArrayList\ getRooms()
comment2.text=\r\n\ @return\ arraylist\ of\ rooms\ in\ game.\r\n
comment3.params=direction\ neighbor
comment3.target=void\ setExit(java.lang.String,\ Room)
comment3.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment4.params=
comment4.target=void\ setMagicRoom()
comment4.text=\r\n\ Set\ this\ room\ as\ a\ magic\ room\ which\ transports\ player\ to\ a\ random\ room\ in\ the\ game.\r\n
comment5.params=
comment5.target=java.lang.Boolean\ getMagicRoom()
comment5.text=\r\n\ Checks\ if\ room\ is\ a\ magic\ transporter\ room.\r\n\ @return\ true\ if\ room\ is\ a\ magic\ room.\r\n
comment6.params=objectString
comment6.target=void\ addObject(java.lang.String)
comment6.text=\r\n\ Add\ an\ object\ to\ the\ room\ from\ a\ pre\=defined\ list.\r\n\ This\ creates\ the\ object\ and\ adds\ it\ to\ an\ arraylist\ of\ that\ room.\r\n\ @param\ String\ of\ object\ name.\r\n
comment7.params=obj
comment7.target=void\ addExistingObject(Object)
comment7.text=\r\n\ Add\ an\ object\ to\ room\ that\ has\ already\ been\ created\ by\ actor\ for\ example.\r\n\ @param\ Already\ existing\ object.\r\n
comment8.params=
comment8.target=java.lang.String\ getShortDescription()
comment8.text=\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
comment9.params=
comment9.target=java.lang.String\ getLongDescription()
comment9.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north,\ west.\r\n\ \ \ \ \ Objects\ nearby\:\ Knife.\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
numComments=16
