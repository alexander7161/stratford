#BlueJ class context
comment0.target=Actor
comment0.text=\r\n\ Class\ which\ represents\ actors\ in\ the\ game\ including\ the\ player.\r\n\r\n\ @author\ Alexander\ Davis\r\n\ @version\ 8.12.2017\r\n
comment1.params=name\ currentRoom\ greetingID
comment1.target=Actor(java.lang.String,\ Room,\ int)
comment1.text=\r\n\ Creates\ actor\ with\ given\ name,\ starting\ room\ and\ ID\ of\ greetings\ to\ set.\r\n\ @param\ name,\ current\ room\ and\ greetings\ ID.\r\n
comment10.params=
comment10.target=java.util.ArrayList\ getAllCurrentActors()
comment10.text=\r\n\ @return\ all\ actors\ in\ current\ room\ as\ an\ arraylist.\r\n
comment11.params=caseNumber
comment11.target=void\ setGreeting(int)
comment11.text=\r\n\ Sets\ greetings\ for\ actor\ from\ pre-defined\ list.\r\n\ @param\ ID\ of\ actor.\r\n
comment12.params=objectString
comment12.target=void\ setObject(java.lang.String)
comment12.text=\r\n\ Set\ objects\ carried\ by\ actor.\r\n\ \r\n\ @param\ ID\ of\ object.\r\n
comment13.params=noEntryRoom
comment13.target=void\ setNoEntryExits(Room)
comment13.text=\r\n\ Set\ no\ entry\ rooms\ for\ actors.\r\n\ @param\ room\ that\ is\ of\ no\ entry.\r\n
comment14.params=obj
comment14.target=void\ addObject(Object)
comment14.text=\r\n\ Add\ object\ to\ actor.\r\n\r\n\ @param\ \ Pre-existing\ object\ to\ add\ to\ actor.\r\n
comment15.params=obj
comment15.target=void\ removeObject(Object)
comment15.text=\r\n\ \r\n\ @param\ object\ to\ remove\ from\ actor.\r\n
comment16.params=newObject
comment16.target=java.lang.Boolean\ getBackpackFull(Object)
comment16.text=\r\n\ \r\n\ @return\ true\ if\ backpack\ is\ full.\r\n
comment17.params=obj
comment17.target=Object\ getObject(java.lang.String)
comment17.text=\r\n\ Get\ object\ player\ is\ carrying.\r\n\ @param\ string\ of\ name\ of\ object.\r\n\ @return\ object,\ null\ if\ actor\ does\ not\ have\ object.\r\n
comment18.params=title
comment18.target=java.lang.String\ getObjectCarryString(java.lang.String)
comment18.text=\r\n\ Get\ list\ of\ objects\ carried\ by\ actor.\r\n\ \r\n\ @param\ String\ of\ prefix\ to\ list.\ Allows\ to\ list\ for\ different\ actors.\ Null\ if\ no\ objects\ carried.\r\n\ @return\ String\ of\ objects.\r\n
comment19.params=
comment19.target=Room\ getCurrentRoom()
comment19.text=\r\n\ @return\ current\ room\ of\ actor.\r\n
comment2.params=
comment2.target=java.util.Set\ getActorsSet()
comment2.text=\r\n\ @return\ set\ of\ all\ actors\ in\ game.\r\n
comment20.params=newRoom
comment20.target=void\ setCurrentRoom(Room)
comment20.text=\r\n\ change\ current\ room\ of\ actor.\r\n\ @param\ new\ room\ to\ move\ actor\ to.\r\n
comment21.params=
comment21.target=java.lang.String\ getName()
comment21.text=\r\n\ @return\ String\ with\ name\ of\ actor\ set\ in\ constructor.\r\n
comment22.params=
comment22.target=Room\ getLastRoom()
comment22.text=\r\n\ \r\n\ @return\ last\ room\ actor\ was\ in.\r\n
comment23.params=
comment23.target=java.lang.String\ getGreeting()
comment23.text=\r\n\ get\ Greeting\ for\ actor.\ Determine\ whether\ first\ or\ second\ greeting\ should\ be\ given.\r\n\ @return\ string\ with\ greeting.\r\n
comment24.params=
comment24.target=void\ setSecondGreeting()
comment24.text=\r\n\ Set\ actor\ to\ return\ second\ greeting.\r\n
comment25.params=
comment25.target=void\ moveRoom()
comment25.text=\r\n\ Move\ actor\ to\ another\ room\ given\ exits\ of\ current\ room.\r\n\ If\ new\ room\ is\ in\ arraylist\ noEntryRooms\ then\ remove\ that\ exit\ from\ arraylist\ and\ choose\ another\ exit.\r\n
comment26.params=
comment26.target=java.lang.Boolean\ getStoryline()
comment26.text=\r\n\ @return\ true\ if\ actor\ is\ relevant\ to\ storyline\ and\ should\ switch\ to\ second\ greeting\ when\ a\ storyline\ object\ is\ taken.\r\n
comment3.params=
comment3.target=void\ moveActors()
comment3.text=\r\n\ Moves\ all\ actors\ in\ game.\r\n
comment4.params=inputName
comment4.target=Actor\ getActorCurrentRoom(java.lang.String)
comment4.text=\r\n\ Checks\ current\ room\ for\ an\ actor.\r\n\ @param\ string\ of\ actor\ name.\r\n\ @return\ Actor\ in\ current\ room.\ Null\ if\ actor\ is\ not\ present.\r\n
comment5.params=inputName
comment5.target=Actor\ getActor(java.lang.String)
comment5.text=\r\n\ Get\ actor\ in\ game\ from\ string\ of\ name\r\n\ @param\ string\ with\ name\ of\ actor.\r\n\ @return\ Actor\ of\ given\ name.\r\n
comment6.params=
comment6.target=void\ printActorDescriptions()
comment6.text=\r\n\ Print\ Description\ of\ actors\ in\ room\ if\ there\ are\ actors.\r\n
comment7.params=
comment7.target=void\ printAllCurrentActorsObjectStrings()
comment7.text=\r\n\ Prints\ object\ string\ for\ each\ actor\ in\ current\ room.\r\n
comment8.params=
comment8.target=java.lang.String\ getAllCurrentActorsString()
comment8.text=\r\n\ @return\ String\ with\ all\ current\ actors\ in\ current\ room.\ If\ no\ actors\ present\ return\ null.\r\n
comment9.params=
comment9.target=void\ printAllCurrentActorsGreetings()
comment9.text=\r\n\ Prints\ greetings\ for\ all\ actors\ in\ current\ room.\r\n
numComments=27
